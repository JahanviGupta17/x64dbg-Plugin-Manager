# Define a TreeNode class to represent the binary tree nodes
class TreeNode:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None

# Helper function to check if a binary tree is a valid BST
def is_valid_BST(root, min_val=float('-inf'), max_val=float('inf')):
    if root is None:
        return True

    if not (min_val < root.value < max_val):
        return False

    return (is_valid_BST(root.left, min_val, root.value) and
            is_valid_BST(root.right, root.value, max_val))

# Example of how to use the is_valid_BST function
if __name__ == "__main__":
    # Create a sample binary tree
    root = TreeNode(2)
    root.left = TreeNode(1)
    root.right = TreeNode(3)

    # Check if the tree is a valid BST
    if is_valid_BST(root):
        print("The given tree is a valid BST.")
    else:
        print("The given tree is not a valid BST.")
